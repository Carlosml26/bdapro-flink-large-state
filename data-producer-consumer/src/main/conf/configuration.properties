#datagenerator.timestamp.inc-every-
datagenerator.resellers.types=op,ds,sd,rl,sb
datagenerator.resellers.op=op
datagenerator.resellers.op.count=1
datagenerator.resellers.ds=ds
datagenerator.resellers.ds.count=3
datagenerator.resellers.sd=sd
datagenerator.resellers.sd.count=3
datagenerator.resellers.rl=rl
datagenerator.resellers.rl.count=3
datagenerator.resellers.sb=sb
datagenerator.resellers.sb.count=3
datagenerator.resellers.format=%s.%s.%05d


# For Aggregation queries: p_credit=1, p_topup=0, p_call=0
# For Join query: p_credit=1, p_topup=1, p_call=3
datagenerator.transaction.p_credit=1
datagenerator.transaction.p_topup=2
datagenerator.transaction.p_call=10



#kafka-props
n_producers=4

# determines the rate of generation
max_rate_messages=2000

# determines the total number of messages
max_number_messages=10000000

topic=TransactionsTopic
bootstrap.servers=localhost:9092
group.id=group01
acks=all
retries=0
batch.size=1638400
linger.ms=1000
buffer.memory=33554432
key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
#value.serializer=org.dima.bdapro.datalayer.bean.json.TransactionSerializer
partitioner.class=org.dima.bdapro.datalayer.producer.partitioner.PerThreadPartitioner

##------------------- Kafka Consumer properties
fetch.min.bytes=477
fetch.max.wait.ms=100
session.timeout.ms=20000
heartbeat.interval.ms=3000

## max.poll.records= dataconsumer.query.time_window_size_ms  * max_rate_messages / n_consumers
#max.poll.records=128

n_consumers=4
# possible values are:
# ALL, ResellerUsageStatistics, LevelUsageStatistics, and RewardedSubscribers
dataconsumer.query=ResellerUsageStatistics
dataconsumer.query.time_window_size_ms=20000
dataconsumer.kafka.polling-time=100

